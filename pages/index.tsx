import Head from 'next/head';
import { useRouter } from 'next/router';
import React, { useEffect, useState } from 'react';
import BarcodeScanner, { isBarcodeDetectorSupported } from '../src/BarcodeScanner';
import { ProductResponse } from '../src/typings';
import { useDebug } from '../src/useDebug';
import styles from '../styles/Home.module.css';

export default function Home() {
  const [toggle, setToggle] = useState(true);
  const [productResponse, setProductResponse] = useState<ProductResponse>();
  const [apiCalls, setApiCalls] = useState(0);
  const [code, setCode] = useState('');
  const isCodeScanned = code !== '';
  const [scansCount, setScansCount] = useState(0); // debug only
  const debug = useDebug();
  const router = useRouter();

  useEffect(() => {
    if (code && code?.length > 0) {
      setApiCalls(c => c + 1);
      fetch(
        `https://world.openfoodfacts.org/api/v0/product/${code}.json?fields=product_name,quantity,brands`,
      )
        .then(response => response.json() as Promise<ProductResponse>)
        .then(data => {
          setProductResponse(data);
        });
    }
  }, [code]);

  return (
    <>
      <Head>
        <title>OFF Scanner</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.container}>
        {isBarcodeDetectorSupported ? (
          <>
            {toggle && <BarcodeScanner setScansCount={setScansCount} setCode={setCode} />}
            {isCodeScanned ? (
              <div
                style={{
                  position: 'fixed',
                  bottom: 0,
                  width: '100%',
                  background: 'rgba(58, 58, 58, 0.75)',
                  color: 'white',
                  padding: '0 20px',
                }}
                onClick={() => router.push('/product/' + code)}
              >
                {debug && (
                  <>
                    <pre style={{ lineHeight: 0.5 }}>Performed scans: {scansCount}</pre>
                    <pre style={{ lineHeight: 0.5 }}>API Calls: {apiCalls}</pre>
                  </>
                )}
                {productResponse?.status ? (
                  <div>
                    <p>ID: {productResponse.code}</p>
                    <p>
                      {productResponse.product.product_name
                        ? productResponse.product.product_name
                        : '<name not known>'}
                    </p>
                    <p>
                      {productResponse.product.quantity
                        ? productResponse.product.quantity
                        : '<weight not specified>'}
                    </p>
                    {/* {productResponse.product.nova_group ? (
                      <NovaGroupIcon group={productResponse.product.nova_group} />
                    ) : null} */}
                    <p>
                      {productResponse.product.brands
                        ? productResponse.product.brands.replaceAll(',', ', ')
                        : '<brands not specified>'}
                    </p>
                    {/* {productResponse.product.images} */}
                  </div>
                ) : (
                  <p>
                    Product with code {productResponse?.code} does not exist in OpenFoodFacts
                    database.
                  </p>
                )}
              </div>
            ) : null}
          </>
        ) : (
          <div className={styles.card}>
            Sorry, your browser is not able to scan barcodes yet. Supported browsers are listed{' '}
            <a href="https://developer.mozilla.org/en-US/docs/Web/API/Barcode_Detection_API#browser_compatibility">
              here
            </a>
            .
          </div>
        )}
      </div>
    </>
  );
}
